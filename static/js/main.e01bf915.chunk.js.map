{"version":3,"sources":["hieee.png","yay.png","ow.png","Start.js","Countdown.js","Position.js","Target.js","Tick.js","Stage.js","Score.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Start","_this$props","this","props","name","onNameChange","onStart","react_default","a","createElement","className","htmlFor","id","type","placeholder","value","onChange","e","target","onClick","Component","Countdown","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","timeRemaining","_this2","onComplete","timerID","setInterval","setState","prevState","clearInterval","getRandom","max","Math","random","getRoundedRandom","round","randomizeDirection","generateDirection","vertical","horizontal","Position","direction","virtualTickID","virtualTickDuration","velocity","currentPosition","x","y","angle","PI","velocityPerTick","vectors","dx","cos","dy","sin","virtualPosition","assign","recalculateVirtualPosition","_this3","children","reposition","stop","height","boundaries","newY","reverseY","newX","reverseX","width","_this$props$boundarie","stageWidth","stageHeight","_this$state","_this$state$virtualPo","_this$state$vectors","moveRight","moveLeft","moveDown","moveUp","onStop","Target","isHit","_this$props$position","position","styles","left","concat","top","style","src","yay","hieee","alt","Tick","startTimer","prevProps","fps","timerId","onTick","frameInterval","Stage","dimensions","setStageSize","resizeWrapper","window","addEventListener","removeEventListener","targetHit","onHit","onMiss","stageDimensions","src_Position","src_Tick","src_Target_0","_window","innerWidth","innerHeight","Score","handleFocus","event","select","assembleScores","scores","map","score","started","ended","misses","params","join","onRestart","formattedScore","onFocus","playing","roundComplete","initialState","gameState","gameplayFPS","gameplayVelocity","number","Rounds","Game","src_Start","setName","start","src_Countdown_0","countdownComplete","includes","src_Stage_0","miss","hit","src_Score","restart","Date","now","setTimeout","nextRound","roundNumber","roundParams","length","done","startCountdown","App","src_Game","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e01bf915.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hieee.74b2390c.png\";","module.exports = __webpack_public_path__ + \"static/media/yay.973afd96.png\";","module.exports = __webpack_public_path__ + \"static/media/ow.31a79875.png\";","import React, { Component } from 'react';\n\nclass Start extends Component {\n  render() {\n    const { name, onNameChange, onStart } = this.props;\n    return (\n      <div className=\"container\">\n        <h1>Frame Game</h1>\n        <p>\n          Each game is five rounds. Click the bear as fast as you can, but watch\n          out—the frame rate for this game is a little unusual.\n        </p>\n\n        <label htmlFor=\"name\" className=\"sr-only\">\n          Your Name\n        </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={e => onNameChange(e.target.value)}\n        />\n\n        <button onClick={onStart}>Play Now!</button>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","import React, { Component } from 'react';\nimport './Countdown.css';\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeRemaining: 3\n    };\n  }\n  componentDidMount() {\n    const { onComplete } = this.props;\n    this.timerID = setInterval(() => {\n      this.setState(prevState => {\n        let timeRemaining = prevState.timeRemaining - 1;\n        if (timeRemaining === 0) {\n          onComplete();\n          clearInterval(this.timerID);\n        }\n        return { timeRemaining };\n      });\n    }, 1000);\n  }\n\n  render() {\n    const { timeRemaining } = this.state;\n    return <h1 className=\"countdown_timer\">{timeRemaining}</h1>;\n  }\n}\n\nexport default Countdown;\n","import React, { Component } from 'react';\n\nconst getRandom = max => Math.random() * max;\nconst getRoundedRandom = max => Math.round(getRandom(max));\n\nconst randomizeDirection = () => {\n  const generateDirection = () => (Math.random() > 0.5 ? 1 : -1);\n  return {\n    vertical: generateDirection(), // positive is down\n    horizontal: generateDirection() // positive is to the right\n  };\n};\n\nclass Position extends Component {\n  direction = null;\n  virtualTickID = null;\n  virtualTickDuration = 15;\n\n  constructor(props) {\n    super(props);\n    const { velocity } = this.props;\n\n    this.direction = randomizeDirection();\n\n    const currentPosition = {\n      x: null,\n      y: null\n    };\n\n    // angle is in radians\n    // we'll limit it to < 90deg for now to make life easy when\n    // trying to calculate the horizontal and vertical vectors\n    const angle = getRandom(Math.PI / 2);\n\n    // velocity is in seconds, tick is in milliseconds\n    const velocityPerTick = (velocity / 1000) * this.virtualTickDuration;\n    // how far will the target move per tick?\n    const vectors = {\n      dx: Math.cos(angle) * velocityPerTick,\n      dy: Math.sin(angle) * velocityPerTick\n    };\n\n    this.state = {\n      vectors,\n      currentPosition,\n      virtualPosition: Object.assign({}, currentPosition)\n    };\n  }\n\n  componentDidMount() {\n    this.virtualTickID = setInterval(\n      () => this.recalculateVirtualPosition(),\n      this.virtualTickDuration\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.virtualTickID);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { currentPosition } = this.state;\n    return children(\n      currentPosition,\n      () => this.reposition(),\n      () => this.stop()\n    );\n  }\n\n  // non-lifecycle methods\n  moveDown(y, dy) {\n    const {\n      boundaries: { height }\n    } = this.props;\n    let newY = y + dy;\n    if (newY > height) {\n      newY = height - (newY - height);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveUp(y, dy) {\n    let newY = y - dy;\n    if (newY < -138) {\n      newY = -138 + (-138 - newY);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveLeft(x, dx) {\n    let newX = x - dx;\n    if (newX < -165) {\n      newX = -165 + (-165 - newX);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  moveRight(x, dx) {\n    const {\n      boundaries: { width }\n    } = this.props;\n    let newX = x + dx;\n    if (newX > width) {\n      newX = width - (newX - width);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  recalculateVirtualPosition() {\n    const {\n      boundaries: { width: stageWidth, height: stageHeight }\n    } = this.props;\n\n    let {\n      virtualPosition: { x, y },\n      vectors: { dx, dy }\n    } = this.state;\n\n    // randomize values on first run\n    if (x === null || y === null) {\n      x = getRoundedRandom(stageWidth);\n      y = getRoundedRandom(stageHeight);\n    }\n\n    const newX =\n      this.direction.horizontal > 0\n        ? this.moveRight(x, dx)\n        : this.moveLeft(x, dx);\n    const newY =\n      this.direction.vertical > 0 ? this.moveDown(y, dy) : this.moveUp(y, dy);\n\n    this.setState({\n      virtualPosition: {\n        x: newX,\n        y: newY\n      }\n    });\n  }\n\n  reposition() {\n    this.setState({\n      currentPosition: Object.assign({}, this.state.virtualPosition)\n    });\n  }\n\n  reverseX() {\n    this.direction.horizontal *= -1;\n  }\n\n  reverseY() {\n    this.direction.vertical *= -1;\n  }\n\n  stop() {\n    this.setState({\n      vectors: { dx: 0, dy: 0 }\n    });\n    this.props.onStop();\n  }\n}\n\nexport default Position;\n","import React, { Component } from 'react';\nimport './Target.css';\nimport hieee from './hieee.png';\nimport ow from './ow.png';\nimport yay from './yay.png';\n\nclass Target extends Component {\n  render() {\n    const {\n      isHit,\n      position: { x, y },\n      onClick\n    } = this.props;\n\n    const styles = {\n      left: `${x}px`,\n      top: `${y}px`\n    };\n    return (\n      <div className=\"target\" style={styles} onClick={onClick}>\n        <img\n          src={isHit ? yay : hieee}\n          alt=\"click me!\"\n          className={isHit ? 'target_img--hit' : ''}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Target;\n","import React, { Component } from 'react';\n\nclass Tick extends Component {\n  render() {\n    const { children } = this.props;\n    return <div>{children}</div>;\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset the timer if fps has been changed\n    if (this.props.fps !== prevProps.fps) {\n      this.startTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  startTimer() {\n    const { fps, onTick } = this.props;\n\n    const frameInterval = 1000 / fps;\n\n    this.timerId = setInterval(() => onTick(), frameInterval);\n  }\n}\n\nexport default Tick;\n","import React, { Component } from 'react';\nimport Position from './Position.js';\nimport Target from './Target.js';\nimport Tick from './Tick.js';\nimport './Stage.css';\n\nclass Stage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n  componentDidMount() {\n    this.setStageSize();\n    this.resizeWrapper = () => this.setStageSize();\n    window.addEventListener('resize', this.resizeWrapper());\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWrapper());\n  }\n\n  render() {\n    const { targetHit, fps, velocity, onHit, onMiss } = this.props;\n    const { dimensions: stageDimensions } = this.state;\n    return (\n      <div className=\"stage\" onClick={onMiss}>\n        <Position\n          boundaries={stageDimensions}\n          velocity={velocity}\n          onStop={onHit}\n        >\n          {(currentPosition, reposition, stop) => (\n            <Tick onTick={reposition} fps={fps}>\n              <Target\n                isHit={targetHit}\n                position={currentPosition}\n                onClick={stop}\n              />\n            </Tick>\n          )}\n        </Position>\n      </div>\n    );\n  }\n\n  setStageSize() {\n    // Weird to use window, but it's easy...\n    const { innerWidth, innerHeight } = window;\n    this.setState({\n      dimensions: {\n        width: innerWidth,\n        height: innerHeight\n      }\n    });\n  }\n}\n\nexport default Stage;\n","import React, { Component } from 'react';\n\nclass Score extends Component {\n  handleFocus = event => event.target.select();\n\n  assembleScores = scores => {\n    const { name } = this.props;\n    return scores\n      .map(score => {\n        const {\n          started,\n          ended,\n          misses,\n          params: { fps }\n        } = score;\n        return `\"${name}\",${fps},${started},${ended},${ended -\n          started},${misses}`;\n      })\n      .join('\\n');\n  };\n\n  render() {\n    const { scores, onRestart } = this.props;\n    const formattedScore = this.assembleScores(scores);\n    return (\n      <div className=\"container\">\n        <h1>You did it!</h1>\n        <p>Please copy and share your score data</p>\n        <textarea onFocus={this.handleFocus} value={formattedScore} />\n        <button onClick={onRestart}>Play Again</button>\n      </div>\n    );\n  }\n}\n\nexport default Score;\n","import React, { Component } from 'react';\n\nimport Start from './Start.js';\nimport Countdown from './Countdown';\nimport Stage from './Stage.js';\nimport Score from './Score.js';\n\nconst ready = 'ready';\nconst countdown = 'countdown';\nconst playing = 'playing';\nconst roundComplete = 'roundComplete';\nconst gameComplete = 'gameComplete';\n\nexport const GameState = {\n  ready,\n  countdown,\n  playing,\n  roundComplete,\n  gameComplete\n};\n\nconst initialState = {\n  gameState: ready,\n  gameplayFPS: 60,\n  gameplayVelocity: 600,\n  name: '',\n  round: { number: 0, started: 0, ended: 0, misses: 0, params: { fps: 60 } },\n  scores: []\n};\n\nconst Rounds = [{ fps: 30 }, { fps: 8 }, { fps: 15 }, { fps: 2 }, { fps: 60 }];\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = Object.assign({}, initialState);\n  }\n\n  // Lifecycle events\n  render() {\n    const {\n      gameState,\n      gameplayVelocity,\n      name,\n      round: {\n        params: { fps }\n      },\n      scores\n    } = this.state;\n\n    if (gameState === ready) {\n      return (\n        <Start\n          onNameChange={name => this.setName(name)}\n          onStart={() => this.start()}\n        />\n      );\n    }\n\n    if (gameState === countdown) {\n      return <Countdown onComplete={() => this.countdownComplete()} />;\n    }\n\n    if ([playing, roundComplete].includes(gameState)) {\n      return (\n        <Stage\n          fps={fps}\n          targetHit={gameState !== playing}\n          velocity={gameplayVelocity}\n          onMiss={() => this.miss()}\n          onHit={() => this.hit()}\n        />\n      );\n    }\n\n    return (\n      <Score name={name} scores={scores} onRestart={() => this.restart()} />\n    );\n  }\n\n  // Hooks\n  countdownComplete() {\n    this.setState(prevState => ({\n      gameState: playing,\n      round: Object.assign({}, prevState.round, { started: Date.now() })\n    }));\n  }\n\n  hit() {\n    this.setState(prevState => ({\n      gameState: roundComplete,\n      scores: prevState.scores.concat(\n        Object.assign({}, prevState.round, { ended: Date.now() })\n      )\n    }));\n    setTimeout(() => this.nextRound(), 2000);\n  }\n\n  miss() {\n    this.setState(prevState => {\n      return {\n        round: Object.assign({}, prevState.round, {\n          misses: prevState.round.misses + 1\n        })\n      };\n    });\n  }\n\n  restart() {\n    const { name } = this.state;\n    this.setState(Object.assign({}, initialState, { name }));\n  }\n\n  start() {\n    this.nextRound();\n  }\n\n  setName(name) {\n    this.setState({ name });\n  }\n\n  // Internal\n  done() {\n    this.setState({ gameState: gameComplete });\n  }\n\n  nextRound() {\n    let {\n      round: { number: roundNumber }\n    } = this.state;\n    const roundParams = Rounds[roundNumber];\n    roundNumber++;\n    if (roundNumber > Rounds.length) {\n      return this.done();\n    }\n    this.setState(prevState => {\n      return {\n        round: Object.assign({}, prevState.round, {\n          misses: 0,\n          number: roundNumber,\n          params: { fps: roundParams.fps }\n        })\n      };\n    });\n    this.startCountdown();\n  }\n\n  startCountdown() {\n    this.setState({ gameState: countdown });\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Game from './Game.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}