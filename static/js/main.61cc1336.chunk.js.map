{"version":3,"sources":["hieee.png","ow.png","yay.png","Position.js","Stage.js","Target.js","Tick.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getRandom","max","Math","random","getRoundedRandom","round","randomizeDirection","generateDirection","vertical","horizontal","Position","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","direction","virtualTickID","virtualTickDuration","velocity","currentPosition","x","y","angle","PI","velocityPerTick","vectors","dx","cos","dy","sin","state","virtualPosition","assign","_this2","setInterval","recalculateVirtualPosition","clearInterval","_this3","children","reposition","height","boundaries","newY","reverseY","newX","reverseX","width","_this$props$boundarie","stageWidth","stageHeight","_this$state","_this$state$virtualPo","_this$state$vectors","moveRight","moveLeft","moveDown","moveUp","setState","Component","Stage","dimensions","setStageSize","resizeWrapper","window","addEventListener","removeEventListener","react_default","a","createElement","className","_window","innerWidth","innerHeight","Target","_this$props$position","position","styles","left","concat","top","style","src","hieee","alt","Tick","startTimer","prevProps","fps","timerId","_this$props","onTick","frameInterval","App","src_Stage_0","stageDimensions","src_Position","src_Tick","src_Target_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iKCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oJCElCC,SAAY,SAAAC,GAAG,OAAIC,KAAKC,SAAWF,IACnCG,EAAmB,SAAAH,GAAG,OAAIC,KAAKG,MAAML,EAAUC,KAE/CK,EAAqB,WACzB,IAAMC,EAAoB,kBAAOL,KAAKC,SAAW,GAAM,GAAK,GAC5D,MAAO,CACLK,SAAUD,IACVE,WAAYF,MAmJDG,cA1Ib,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KALRQ,UAAY,KAIOP,EAHnBQ,cAAgB,KAGGR,EAFnBS,oBAAsB,GAEH,IAETC,EAAaV,EAAKD,MAAlBW,SAERV,EAAKO,UAAYb,IAEjB,IAAMiB,EAAkB,CACtBC,EAAG,KACHC,EAAG,MAMCC,EAAQ1B,EAAUE,KAAKyB,GAAK,GAG5BC,EAAmBN,EAAW,IAAQV,EAAKS,oBAE3CQ,EAAU,CACdC,GAAI5B,KAAK6B,IAAIL,GAASE,EACtBI,GAAI9B,KAAK+B,IAAIP,GAASE,GArBP,OAwBjBhB,EAAKsB,MAAQ,CACXL,UACAN,kBACAY,gBAAiBtB,OAAOuB,OAAO,GAAIb,IA3BpBX,mFA+BC,IAAAyB,EAAAtB,KAClBA,KAAKK,cAAgBkB,YACnB,kBAAMD,EAAKE,8BACXxB,KAAKM,oEAKPmB,cAAczB,KAAKK,gDAGZ,IAAAqB,EAAA1B,KAGP,OAAO2B,EAFc3B,KAAKJ,MAAlB+B,UACoB3B,KAAKmB,MAAzBX,gBACyB,kBAAMkB,EAAKE,gDAIrClB,EAAGO,GAAI,IAEEY,EACZ7B,KAAKJ,MADPkC,WAAcD,OAEZE,EAAOrB,EAAIO,EAKf,OAJIc,EAAOF,IACTE,EAAOF,GAAUE,EAAOF,GACxB7B,KAAKgC,YAEAD,iCAGFrB,EAAGO,GACR,IAAIc,EAAOrB,EAAIO,EAKf,OAJIc,GAAQ,MACVA,GAAgB,IAAMA,EAAd,IACR/B,KAAKgC,YAEAD,mCAGAtB,EAAGM,GACV,IAAIkB,EAAOxB,EAAIM,EAKf,OAJIkB,GAAQ,MACVA,GAAgB,IAAMA,EAAd,IACRjC,KAAKkC,YAEAD,oCAGCxB,EAAGM,GAAI,IAECoB,EACZnC,KAAKJ,MADPkC,WAAcK,MAEZF,EAAOxB,EAAIM,EAKf,OAJIkB,EAAOE,IACTF,EAAOE,GAASF,EAAOE,GACvBnC,KAAKkC,YAEAD,uDAGoB,IAAAG,EAGvBpC,KAAKJ,MADPkC,WAAqBO,EAFID,EAEXD,MAA2BG,EAFhBF,EAEQP,OAFRU,EAQvBvC,KAAKmB,MARkBqB,EAAAD,EAMzBnB,gBAAmBX,EANM+B,EAMN/B,EAAGC,EANG8B,EAMH9B,EANG+B,EAAAF,EAOzBzB,QAAWC,EAPc0B,EAOd1B,GAAIE,EAPUwB,EAOVxB,GAIP,OAANR,GAAoB,OAANC,IAEhBD,EAAIpB,EAAiBgD,GACrB3B,EAAIrB,EAAiBiD,IAGvB,IAAML,EACJjC,KAAKI,UAAUV,WAAa,EACxBM,KAAK0C,UAAUjC,EAAGM,GAClBf,KAAK2C,SAASlC,EAAGM,GACjBgB,EACJ/B,KAAKI,UAAUX,SAAW,EAAIO,KAAK4C,SAASlC,EAAGO,GAAMjB,KAAK6C,OAAOnC,EAAGO,GAEtEjB,KAAK8C,SAAS,CACZ1B,gBAAiB,CACfX,EAAGwB,EACHvB,EAAGqB,0CAMP/B,KAAK8C,SAAS,CACZtC,gBAAiBV,OAAOuB,OAAO,GAAIrB,KAAKmB,MAAMC,sDAKhDpB,KAAKI,UAAUV,aAAe,qCAI9BM,KAAKI,UAAUX,WAAa,SA3ITsD,aC2BRC,qBApCb,SAAAA,EAAYpD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACjBnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KACDuB,MAAQ,CACX8B,WAAY,CACVd,MAAO,EACPN,OAAQ,IALKhC,mFASC,IAAAyB,EAAAtB,KAClBA,KAAKkD,eACLlD,KAAKmD,cAAgB,kBAAM7B,EAAK4B,gBAChCE,OAAOC,iBAAiB,SAAUrD,KAAKmD,gEAGvCC,OAAOE,oBAAoB,SAAUtD,KAAKmD,kDAGnC,IACCxB,EAAa3B,KAAKJ,MAAlB+B,SACAsB,EAAejD,KAAKmB,MAApB8B,WACR,OAAOM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS/B,EAASsB,2CAG3B,IAAAU,EAEuBP,OAA5BQ,EAFKD,EAELC,WAAYC,EAFPF,EAEOE,YACpB7D,KAAK8C,SAAS,CACZG,WAAY,CACVd,MAAOyB,EACP/B,OAAQgC,YA/BId,sCCoBLe,gMAhBJ,IAAAC,EAGH/D,KAAKJ,MADPoE,SAAYvD,EAFPsD,EAEOtD,EAAGC,EAFVqD,EAEUrD,EAEXuD,EAAS,CACbC,KAAI,GAAAC,OAAK1D,EAAL,MACJ2D,IAAG,GAAAD,OAAKzD,EAAL,OAEL,OACE6C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASW,MAAOJ,GAC7BV,EAAAC,EAAAC,cAAA,OAAKa,IAAKC,IAAOC,IAAI,sBAXRzB,cC0BN0B,mLA7BJ,IACC9C,EAAa3B,KAAKJ,MAAlB+B,SACR,OAAO4B,EAAAC,EAAAC,cAAA,WAAM9B,+CAIb3B,KAAK0E,wDAGYC,GAEb3E,KAAKJ,MAAMgF,MAAQD,EAAUC,KAC/B5E,KAAK0E,4DAKPjD,cAAczB,KAAK6E,8CAGR,IAAAC,EACa9E,KAAKJ,MAArBgF,EADGE,EACHF,IAAKG,EADFD,EACEC,OAEPC,EAAgB,IAAOJ,EAE7B5E,KAAK6E,QAAUtD,YAAY,kBAAMwD,KAAUC,UA1B5BjC,aCyBJkC,mLAlBX,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyB,EAAD,KACG,SAAAC,GAAe,OACd5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAUtD,WAAYqD,EAAiB5E,SAAU,MAC9C,SAACC,EAAiBoB,GAAlB,OACC2B,EAAAC,EAAAC,cAAC4B,EAAD,CAAMN,OAAQnD,EAAYgD,IAAK,IAC7BrB,EAAAC,EAAAC,cAAC6B,EAAD,CAAQtB,SAAUxD,iBATlBuC,aCKEwC,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.61cc1336.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hieee.74b2390c.png\";","module.exports = __webpack_public_path__ + \"static/media/ow.31a79875.png\";","module.exports = __webpack_public_path__ + \"static/media/yay.973afd96.png\";","import React, { Component } from 'react';\n\nconst getRandom = max => Math.random() * max;\nconst getRoundedRandom = max => Math.round(getRandom(max));\n\nconst randomizeDirection = () => {\n  const generateDirection = () => (Math.random() > 0.5 ? 1 : -1);\n  return {\n    vertical: generateDirection(), // positive is down\n    horizontal: generateDirection() // positive is to the right\n  };\n};\n\nclass Position extends Component {\n  direction = null;\n  virtualTickID = null;\n  virtualTickDuration = 15;\n\n  constructor(props) {\n    super(props);\n    const { velocity } = this.props;\n\n    this.direction = randomizeDirection();\n\n    const currentPosition = {\n      x: null,\n      y: null\n    };\n\n    // angle is in radians\n    // we'll limit it to < 90deg for now to make life easy when\n    // trying to calculate the horizontal and vertical vectors\n    const angle = getRandom(Math.PI / 2);\n\n    // velocity is in seconds, tick is in milliseconds\n    const velocityPerTick = (velocity / 1000) * this.virtualTickDuration;\n    // how far will the target move per tick?\n    const vectors = {\n      dx: Math.cos(angle) * velocityPerTick,\n      dy: Math.sin(angle) * velocityPerTick\n    };\n\n    this.state = {\n      vectors,\n      currentPosition,\n      virtualPosition: Object.assign({}, currentPosition)\n    };\n  }\n\n  componentDidMount() {\n    this.virtualTickID = setInterval(\n      () => this.recalculateVirtualPosition(),\n      this.virtualTickDuration\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.virtualTickID);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { currentPosition } = this.state;\n    return children(currentPosition, () => this.reposition());\n  }\n\n  // non-lifecycle methods\n  moveDown(y, dy) {\n    const {\n      boundaries: { height }\n    } = this.props;\n    let newY = y + dy;\n    if (newY > height) {\n      newY = height - (newY - height);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveUp(y, dy) {\n    let newY = y - dy;\n    if (newY < -138) {\n      newY = -138 + (-138 - newY);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveLeft(x, dx) {\n    let newX = x - dx;\n    if (newX < -165) {\n      newX = -165 + (-165 - newX);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  moveRight(x, dx) {\n    const {\n      boundaries: { width }\n    } = this.props;\n    let newX = x + dx;\n    if (newX > width) {\n      newX = width - (newX - width);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  recalculateVirtualPosition() {\n    const {\n      boundaries: { width: stageWidth, height: stageHeight }\n    } = this.props;\n\n    let {\n      virtualPosition: { x, y },\n      vectors: { dx, dy }\n    } = this.state;\n\n    // randomize values on first run\n    if (x === null || y === null) {\n      debugger;\n      x = getRoundedRandom(stageWidth);\n      y = getRoundedRandom(stageHeight);\n    }\n\n    const newX =\n      this.direction.horizontal > 0\n        ? this.moveRight(x, dx)\n        : this.moveLeft(x, dx);\n    const newY =\n      this.direction.vertical > 0 ? this.moveDown(y, dy) : this.moveUp(y, dy);\n\n    this.setState({\n      virtualPosition: {\n        x: newX,\n        y: newY\n      }\n    });\n  }\n\n  reposition() {\n    this.setState({\n      currentPosition: Object.assign({}, this.state.virtualPosition)\n    });\n  }\n\n  reverseX() {\n    this.direction.horizontal *= -1;\n  }\n\n  reverseY() {\n    this.direction.vertical *= -1;\n  }\n}\n\nexport default Position;\n","import React, { Component } from 'react';\nimport './Stage.css';\n\nclass Stage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n  componentDidMount() {\n    this.setStageSize();\n    this.resizeWrapper = () => this.setStageSize();\n    window.addEventListener('resize', this.resizeWrapper());\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWrapper());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { dimensions } = this.state;\n    return <div className=\"stage\">{children(dimensions)}</div>;\n  }\n\n  setStageSize() {\n    // Weird to use window, but it's easy...\n    const { innerWidth, innerHeight } = window;\n    this.setState({\n      dimensions: {\n        width: innerWidth,\n        height: innerHeight\n      }\n    });\n  }\n}\n\nexport default Stage;\n","import React, { Component } from 'react';\nimport './Target.css';\nimport hieee from './hieee.png';\nimport ow from './ow.png';\nimport yay from './yay.png';\n\nclass Target extends Component {\n  render() {\n    const {\n      position: { x, y }\n    } = this.props;\n    const styles = {\n      left: `${x}px`,\n      top: `${y}px`\n    };\n    return (\n      <div className=\"target\" style={styles}>\n        <img src={hieee} alt=\"click me!\" />\n      </div>\n    );\n  }\n}\n\nexport default Target;\n","import React, { Component } from 'react';\n\nclass Tick extends Component {\n  render() {\n    const { children } = this.props;\n    return <div>{children}</div>;\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset the timer if fps has been changed\n    if (this.props.fps !== prevProps.fps) {\n      this.startTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  startTimer() {\n    const { fps, onTick } = this.props;\n\n    const frameInterval = 1000 / fps;\n\n    this.timerId = setInterval(() => onTick(), frameInterval);\n  }\n}\n\nexport default Tick;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Position from './Position.js';\nimport Stage from './Stage.js';\nimport Target from './Target.js';\nimport Tick from './Tick.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Stage>\n          {stageDimensions => (\n            <Position boundaries={stageDimensions} velocity={1500}>\n              {(currentPosition, reposition) => (\n                <Tick onTick={reposition} fps={60}>\n                  <Target position={currentPosition} />\n                </Tick>\n              )}\n            </Position>\n          )}\n        </Stage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}