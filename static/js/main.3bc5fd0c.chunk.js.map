{"version":3,"sources":["hieee.png","yay.png","ow.png","Countdown.js","Position.js","Target.js","Tick.js","Stage.js","Start.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Countdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timeRemaining","_this2","onComplete","timerID","setInterval","setState","prevState","clearInterval","react_default","a","createElement","className","Component","getRandom","max","Math","random","getRoundedRandom","round","randomizeDirection","generateDirection","vertical","horizontal","Position","direction","virtualTickID","virtualTickDuration","velocity","currentPosition","x","y","angle","PI","velocityPerTick","vectors","dx","cos","dy","sin","virtualPosition","assign","recalculateVirtualPosition","_this3","children","reposition","stop","height","boundaries","newY","reverseY","newX","reverseX","width","_this$props$boundarie","stageWidth","stageHeight","_this$state","_this$state$virtualPo","_this$state$vectors","moveRight","moveLeft","moveDown","moveUp","onStop","Target","_this$props","isHit","_this$props$position","position","onClick","styles","left","concat","top","style","src","yay","hieee","alt","Tick","startTimer","prevProps","fps","timerId","onTick","frameInterval","Stage","dimensions","setStageSize","resizeWrapper","window","addEventListener","removeEventListener","targetHit","onHit","stageDimensions","src_Position","src_Tick","src_Target_0","_window","innerWidth","innerHeight","Start","name","onNameChange","onStart","htmlFor","id","type","placeholder","value","onChange","e","target","playing","roundComplete","initialState","gameState","gameplayFPS","gameplayVelocity","number","params","scores","Rounds","Game","src_Start_0","setName","start","src_Countdown_0","countdownComplete","includes","src_Stage_0","hit","setTimeout","nextRound","roundNumber","roundParams","length","done","startCountdown","App","src_Game","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bc5fd0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hieee.74b2390c.png\";","module.exports = __webpack_public_path__ + \"static/media/yay.973afd96.png\";","module.exports = __webpack_public_path__ + \"static/media/ow.31a79875.png\";","import React, { Component } from 'react';\nimport './Countdown.css';\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeRemaining: 3\n    };\n  }\n  componentDidMount() {\n    const { onComplete } = this.props;\n    this.timerID = setInterval(() => {\n      this.setState(prevState => {\n        let timeRemaining = prevState.timeRemaining - 1;\n        if (timeRemaining === 0) {\n          onComplete();\n          clearInterval(this.timerID);\n        }\n        return { timeRemaining };\n      });\n    }, 1000);\n  }\n\n  render() {\n    const { timeRemaining } = this.state;\n    return <h1 className=\"countdown_timer\">{timeRemaining}</h1>;\n  }\n}\n\nexport default Countdown;\n","import React, { Component } from 'react';\n\nconst getRandom = max => Math.random() * max;\nconst getRoundedRandom = max => Math.round(getRandom(max));\n\nconst randomizeDirection = () => {\n  const generateDirection = () => (Math.random() > 0.5 ? 1 : -1);\n  return {\n    vertical: generateDirection(), // positive is down\n    horizontal: generateDirection() // positive is to the right\n  };\n};\n\nclass Position extends Component {\n  direction = null;\n  virtualTickID = null;\n  virtualTickDuration = 15;\n\n  constructor(props) {\n    super(props);\n    const { velocity } = this.props;\n\n    this.direction = randomizeDirection();\n\n    const currentPosition = {\n      x: null,\n      y: null\n    };\n\n    // angle is in radians\n    // we'll limit it to < 90deg for now to make life easy when\n    // trying to calculate the horizontal and vertical vectors\n    const angle = getRandom(Math.PI / 2);\n\n    // velocity is in seconds, tick is in milliseconds\n    const velocityPerTick = (velocity / 1000) * this.virtualTickDuration;\n    // how far will the target move per tick?\n    const vectors = {\n      dx: Math.cos(angle) * velocityPerTick,\n      dy: Math.sin(angle) * velocityPerTick\n    };\n\n    this.state = {\n      vectors,\n      currentPosition,\n      virtualPosition: Object.assign({}, currentPosition)\n    };\n  }\n\n  componentDidMount() {\n    this.virtualTickID = setInterval(\n      () => this.recalculateVirtualPosition(),\n      this.virtualTickDuration\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.virtualTickID);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { currentPosition } = this.state;\n    return children(\n      currentPosition,\n      () => this.reposition(),\n      () => this.stop()\n    );\n  }\n\n  // non-lifecycle methods\n  moveDown(y, dy) {\n    const {\n      boundaries: { height }\n    } = this.props;\n    let newY = y + dy;\n    if (newY > height) {\n      newY = height - (newY - height);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveUp(y, dy) {\n    let newY = y - dy;\n    if (newY < -138) {\n      newY = -138 + (-138 - newY);\n      this.reverseY();\n    }\n    return newY;\n  }\n\n  moveLeft(x, dx) {\n    let newX = x - dx;\n    if (newX < -165) {\n      newX = -165 + (-165 - newX);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  moveRight(x, dx) {\n    const {\n      boundaries: { width }\n    } = this.props;\n    let newX = x + dx;\n    if (newX > width) {\n      newX = width - (newX - width);\n      this.reverseX();\n    }\n    return newX;\n  }\n\n  recalculateVirtualPosition() {\n    const {\n      boundaries: { width: stageWidth, height: stageHeight }\n    } = this.props;\n\n    let {\n      virtualPosition: { x, y },\n      vectors: { dx, dy }\n    } = this.state;\n\n    // randomize values on first run\n    if (x === null || y === null) {\n      x = getRoundedRandom(stageWidth);\n      y = getRoundedRandom(stageHeight);\n    }\n\n    const newX =\n      this.direction.horizontal > 0\n        ? this.moveRight(x, dx)\n        : this.moveLeft(x, dx);\n    const newY =\n      this.direction.vertical > 0 ? this.moveDown(y, dy) : this.moveUp(y, dy);\n\n    this.setState({\n      virtualPosition: {\n        x: newX,\n        y: newY\n      }\n    });\n  }\n\n  reposition() {\n    this.setState({\n      currentPosition: Object.assign({}, this.state.virtualPosition)\n    });\n  }\n\n  reverseX() {\n    this.direction.horizontal *= -1;\n  }\n\n  reverseY() {\n    this.direction.vertical *= -1;\n  }\n\n  stop() {\n    this.setState({\n      vectors: { dx: 0, dy: 0 }\n    });\n    this.props.onStop();\n  }\n}\n\nexport default Position;\n","import React, { Component } from 'react';\nimport './Target.css';\nimport hieee from './hieee.png';\nimport ow from './ow.png';\nimport yay from './yay.png';\n\nclass Target extends Component {\n  render() {\n    const {\n      isHit,\n      position: { x, y },\n      onClick\n    } = this.props;\n\n    const styles = {\n      left: `${x}px`,\n      top: `${y}px`\n    };\n    return (\n      <div className=\"target\" style={styles} onClick={onClick}>\n        <img\n          src={isHit ? yay : hieee}\n          alt=\"click me!\"\n          className={isHit ? 'target_img--hit' : ''}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Target;\n","import React, { Component } from 'react';\n\nclass Tick extends Component {\n  render() {\n    const { children } = this.props;\n    return <div>{children}</div>;\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset the timer if fps has been changed\n    if (this.props.fps !== prevProps.fps) {\n      this.startTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  startTimer() {\n    const { fps, onTick } = this.props;\n\n    const frameInterval = 1000 / fps;\n\n    this.timerId = setInterval(() => onTick(), frameInterval);\n  }\n}\n\nexport default Tick;\n","import React, { Component } from 'react';\nimport Position from './Position.js';\nimport Target from './Target.js';\nimport Tick from './Tick.js';\nimport './Stage.css';\n\nclass Stage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n  componentDidMount() {\n    this.setStageSize();\n    this.resizeWrapper = () => this.setStageSize();\n    window.addEventListener('resize', this.resizeWrapper());\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWrapper());\n  }\n\n  render() {\n    const { targetHit, fps, velocity, onHit } = this.props;\n    const { dimensions: stageDimensions } = this.state;\n    return (\n      <div className=\"stage\">\n        <Position\n          boundaries={stageDimensions}\n          velocity={velocity}\n          onStop={onHit}\n        >\n          {(currentPosition, reposition, stop) => (\n            <Tick onTick={reposition} fps={fps}>\n              <Target\n                isHit={targetHit}\n                position={currentPosition}\n                onClick={stop}\n              />\n            </Tick>\n          )}\n        </Position>\n      </div>\n    );\n  }\n\n  setStageSize() {\n    // Weird to use window, but it's easy...\n    const { innerWidth, innerHeight } = window;\n    this.setState({\n      dimensions: {\n        width: innerWidth,\n        height: innerHeight\n      }\n    });\n  }\n}\n\nexport default Stage;\n","import React, { Component } from 'react';\nimport './Start.css';\n\nclass Start extends Component {\n  render() {\n    const { name, onNameChange, onStart } = this.props;\n    return (\n      <div className=\"start\">\n        <h1>Frame Game</h1>\n        <p>\n          Each game is five rounds. Click the bear as fast as you can, but watch\n          out—the frame rate for this game is a little unusual.\n        </p>\n\n        <label htmlFor=\"name\" className=\"sr-only\">\n          Your Name\n        </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={e => onNameChange(e.target.value)}\n        />\n\n        <button onClick={onStart}>Play Now!</button>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","import React, { Component } from 'react';\n\nimport Countdown from './Countdown';\nimport Stage from './Stage.js';\nimport Start from './Start.js';\n\nconst ready = 'ready';\nconst countdown = 'countdown';\nconst playing = 'playing';\nconst roundComplete = 'roundComplete';\nconst gameComplete = 'gameComplete';\n\nexport const GameState = {\n  ready,\n  countdown,\n  playing,\n  roundComplete,\n  gameComplete\n};\n\nconst initialState = {\n  gameState: ready,\n  gameplayFPS: 60,\n  gameplayVelocity: 600,\n  name: '',\n  round: { number: 0, params: { fps: 60 } },\n  scores: []\n};\n\nconst Rounds = [{ fps: 30 }, { fps: 8 }, { fps: 15 }, { fps: 2 }, { fps: 60 }];\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = Object.assign({}, initialState);\n  }\n\n  // Lifecycle events\n  render() {\n    const {\n      gameState,\n      gameplayVelocity,\n      round: {\n        params: { fps }\n      }\n    } = this.state;\n\n    if (gameState === ready) {\n      return (\n        <Start\n          onNameChange={name => this.setName(name)}\n          onStart={() => this.start()}\n        />\n      );\n    }\n\n    if (gameState === countdown) {\n      return <Countdown onComplete={() => this.countdownComplete()} />;\n    }\n\n    if ([playing, roundComplete].includes(gameState)) {\n      return (\n        <Stage\n          fps={fps}\n          targetHit={gameState !== playing}\n          velocity={gameplayVelocity}\n          onHit={() => this.hit()}\n        />\n      );\n    }\n\n    return 'TODO';\n  }\n\n  // Hooks\n  countdownComplete() {\n    this.setState({\n      gameState: playing\n    });\n  }\n\n  hit() {\n    this.setState({ gameState: roundComplete });\n    setTimeout(() => this.nextRound(), 2000);\n  }\n\n  restart() {\n    const { name } = this.state;\n    this.setState(Object.assign({}, this.state, { name }));\n  }\n\n  start() {\n    this.nextRound();\n  }\n\n  setName(name) {\n    this.setState({ name });\n  }\n\n  // Internal\n  done() {\n    this.setState({ gameState: gameComplete });\n  }\n\n  nextRound() {\n    let {\n      round: { number: roundNumber }\n    } = this.state;\n    const roundParams = Rounds[roundNumber];\n    roundNumber++;\n    if (roundNumber > Rounds.length) {\n      return this.done();\n    }\n    this.setState({\n      round: {\n        number: roundNumber,\n        params: { fps: roundParams.fps }\n      }\n    });\n    this.startCountdown();\n  }\n\n  startCountdown() {\n    this.setState({ gameState: countdown });\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Game from './Game.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}